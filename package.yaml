name: fab
version: 0.2.0
synopsis: Fabricate Adaptive Builders
maintainer: Imuli <i@imu.li>
github: imuli/fab
license-file: UNLICENSE
license: PublicDomain
category: Control, Concurrency
extra-source-files:
  - CHANGELOG.md
description: |
  fab provides a family monadic build systems for use inside programs.

  It is roughly inspired by [Build Systems Ã  la Carte](https://doi.org/10.1017/S0956796820000088),
  but heavily refactored with type classes due to the following goals:

  - Fabrications of one type can depend on fabrications of other types.
  - Every key type can specify what strategy to use for build invalidation.

  The following goals are not yet implemented:

  - Batching - provide a mechanism (like [Haxl](https://hackage.haskell.org/package/haxl))
    to collect many fabrication requests for the same key type and process them
    simultaneously. This is most useful in Haxl-like contexts, fetching from
    data sources, but there may be other situations when fabricating a bunch of
    something is cheaper as a group than individually.
  - Multithreading. The current schedulers are very simplistic and cannot run
    multiple fabricators at the same time.

ghc-options: -Wall

dependencies:
  - base >= 4.11 && < 5.0
  - data-default >= 0.5 && < 0.8
  - hashable ^>= 1.3
  - mtl ^>= 2.2
  - exceptions ^>= 0.10
  - transformers ^>= 0.5
  - unordered-containers ^>= 0.2.11

library:
  source-dirs: src
  other-modules:
    - Fab.Trace

tests:
  spec:
    main: Spec.hs
    source-dirs: test
    dependencies:
      - hspec ^>=  2.7
      - QuickCheck ^>= 2.14
      - fab
